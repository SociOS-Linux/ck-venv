# Adaptive container with the CK interface
# Concept: https://arxiv.org/abs/2011.01149

# See Intel TF optimized containers: https://hub.docker.com/r/intelaipg/intel-optimized-tensorflow

FROM intelaipg/intel-optimized-tensorflow:2.1.0-mkl-py3

# Contact
LABEL maintainer="Grigori Fursin <grigori@octoml.ai>"

# Shell info
SHELL ["/bin/bash", "-c"]
ENTRYPOINT ["/bin/bash", "-c"]

# Set noninteractive mode for apt (do not use ENV)
ARG DEBIAN_FRONTEND=noninteractive

# Notes: https://runnable.com/blog/9-common-dockerfile-mistakes
# Install system dependencies
RUN apt update && \
    apt install -y --no-install-recommends \
           apt-utils \
           git wget zip bzip2 libz-dev libbz2-dev cmake curl unzip \
           openssh-client vim mc tree \
           gcc g++ autoconf autogen libtool make libc6-dev build-essential \
           libgtk2.0-dev libssl-dev libbz2-dev libffi-dev \
           python3 python3-pip python3-dev \
           sudo

# Prepare a user with a user group with a random id
RUN groupadd -g 1111 octoml
RUN useradd -u 2222 -g octoml --create-home --shell /bin/bash octoml
RUN echo "octoml:octoml" | chpasswd
RUN adduser octoml sudo
RUN echo "octoml   ALL=(ALL)  NOPASSWD:ALL" >> /etc/sudoers

# Set user
USER octoml:octoml
WORKDIR /home/octoml
ENV PATH="/home/octoml/.local/bin:${PATH}"
RUN mkdir .ssh

# Install CK
RUN export DUMMY_CK=A
RUN ${DUMMY_CK} pip3 install virtualenv --user
RUN ${DUMMY_CK} pip3 install ck --user

# Clone ck-ml repo
RUN ck pull repo:ai

# Install packages to CK env entries
RUN ck setup kernel --var.install_to_env=yes
